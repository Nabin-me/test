{"dependencies":[{"name":"../utils/","loc":{"line":1,"column":28}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wheelHandler = wheelHandler;\n\nvar _utils = require(\"../utils/\");\n\nfunction wheelHandler(scrollbar) {\n  var addEvent = (0, _utils.eventScope)(scrollbar);\n  var target = scrollbar.options.delegateTo || scrollbar.containerEl;\n  var eventName = 'onwheel' in window || document.implementation.hasFeature('Events.wheel', '3.0') ? 'wheel' : 'mousewheel';\n  addEvent(target, eventName, function (evt) {\n    var _a = normalizeDelta(evt),\n        x = _a.x,\n        y = _a.y;\n    scrollbar.addTransformableMomentum(x, y, evt, function (willScroll) {\n      if (willScroll) {\n        evt.preventDefault();\n      }\n    });\n  });\n}\n// Normalizing wheel delta\nvar DELTA_SCALE = {\n  STANDARD: 1,\n  OTHERS: -3\n};\nvar DELTA_MODE = [1.0, 28.0, 500.0];\nvar getDeltaMode = function (mode) {\n  return DELTA_MODE[mode] || DELTA_MODE[0];\n};\nfunction normalizeDelta(evt) {\n  if ('deltaX' in evt) {\n    var mode = getDeltaMode(evt.deltaMode);\n    return {\n      x: evt.deltaX / DELTA_SCALE.STANDARD * mode,\n      y: evt.deltaY / DELTA_SCALE.STANDARD * mode\n    };\n  }\n  if ('wheelDeltaX' in evt) {\n    return {\n      x: evt.wheelDeltaX / DELTA_SCALE.OTHERS,\n      y: evt.wheelDeltaY / DELTA_SCALE.OTHERS\n    };\n  }\n  // ie with touchpad\n  return {\n    x: 0,\n    y: evt.wheelDelta / DELTA_SCALE.OTHERS\n  };\n}\n//# sourceMappingURL=wheel.js.map"},"hash":"6b0d130935c73cf220031728222e15ea"}