{"dependencies":[{"name":"./_baseClamp.js","loc":{"line":1,"column":22}},{"name":"./toNumber.js","loc":{"line":2,"column":21}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseClamp = require(\"./_baseClamp.js\");\n\nvar _baseClamp2 = _interopRequireDefault(_baseClamp);\n\nvar _toNumber = require(\"./toNumber.js\");\n\nvar _toNumber2 = _interopRequireDefault(_toNumber);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */\nfunction clamp(number, lower, upper) {\n  if (upper === undefined) {\n    upper = lower;\n    lower = undefined;\n  }\n  if (upper !== undefined) {\n    upper = (0, _toNumber2.default)(upper);\n    upper = upper === upper ? upper : 0;\n  }\n  if (lower !== undefined) {\n    lower = (0, _toNumber2.default)(lower);\n    lower = lower === lower ? lower : 0;\n  }\n  return (0, _baseClamp2.default)((0, _toNumber2.default)(number), lower, upper);\n}\n\nexports.default = clamp;"},"hash":"9fd480770ad2e1b8d3acf044f0d71ed4"}