{"dependencies":[{"name":"lodash-es/clamp","loc":{"line":1,"column":18}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scrollTo = scrollTo;\n\nvar _clamp = require(\"lodash-es/clamp\");\n\nvar _clamp2 = _interopRequireDefault(_clamp);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar animationIDStorage = new WeakMap();\nfunction scrollTo(scrollbar, x, y, duration, _a) {\n  if (duration === void 0) {\n    duration = 0;\n  }\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.easing,\n      easing = _c === void 0 ? defaultEasing : _c,\n      callback = _b.callback;\n  var options = scrollbar.options,\n      offset = scrollbar.offset,\n      limit = scrollbar.limit;\n  if (options.renderByPixels) {\n    // ensure resolved with integer\n    x = Math.round(x);\n    y = Math.round(y);\n  }\n  var startX = offset.x;\n  var startY = offset.y;\n  var disX = (0, _clamp2.default)(x, 0, limit.x) - startX;\n  var disY = (0, _clamp2.default)(y, 0, limit.y) - startY;\n  var start = Date.now();\n  function scroll() {\n    var elapse = Date.now() - start;\n    var progress = duration ? easing(Math.min(elapse / duration, 1)) : 1;\n    scrollbar.setPosition(startX + disX * progress, startY + disY * progress);\n    if (elapse >= duration) {\n      if (typeof callback === 'function') {\n        callback.call(scrollbar);\n      }\n    } else {\n      var animationID = requestAnimationFrame(scroll);\n      animationIDStorage.set(scrollbar, animationID);\n    }\n  }\n  cancelAnimationFrame(animationIDStorage.get(scrollbar));\n  scroll();\n}\n/**\n * easeOutCubic\n */\nfunction defaultEasing(t) {\n  return Math.pow(t - 1, 3) + 1;\n}\n//# sourceMappingURL=scroll-to.js.map"},"hash":"446bf8947a5da35d7bc341d8143645c7"}