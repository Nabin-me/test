{"dependencies":[],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.eventScope = eventScope;\nexports.clearEventsOn = clearEventsOn;\nvar eventListenerOptions;\nvar eventMap = new WeakMap();\nfunction getOptions() {\n  if (eventListenerOptions !== undefined) {\n    return eventListenerOptions;\n  }\n  var supportPassiveEvent = false;\n  try {\n    var noop = function () {};\n    var options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        supportPassiveEvent = true;\n      }\n    });\n    window.addEventListener('testPassive', noop, options);\n    window.removeEventListener('testPassive', noop, options);\n  } catch (e) {}\n  eventListenerOptions = supportPassiveEvent ? { passive: false } : false;\n  return eventListenerOptions;\n}\nfunction eventScope(scrollbar) {\n  var configs = eventMap.get(scrollbar) || [];\n  eventMap.set(scrollbar, configs);\n  return function addEvent(elem, events, fn) {\n    function handler(event) {\n      // ignore default prevented events\n      if (event.defaultPrevented) {\n        return;\n      }\n      fn(event);\n    }\n    events.split(/\\s+/g).forEach(function (eventName) {\n      configs.push({ elem: elem, eventName: eventName, handler: handler });\n      elem.addEventListener(eventName, handler, getOptions());\n    });\n  };\n}\nfunction clearEventsOn(scrollbar) {\n  var configs = eventMap.get(scrollbar);\n  if (!configs) {\n    return;\n  }\n  configs.forEach(function (_a) {\n    var elem = _a.elem,\n        eventName = _a.eventName,\n        handler = _a.handler;\n    elem.removeEventListener(eventName, handler, getOptions());\n  });\n  eventMap.delete(scrollbar);\n}\n//# sourceMappingURL=event-hub.js.map"},"hash":"ef52f9d772117331b04a9e005f2e8a5d"}